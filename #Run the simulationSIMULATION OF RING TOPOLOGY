#Create a simulator object
ns [new Simulator]

#Open file for nam tracing 
set nf [open ring.nam w]
$ns namtrace-all $nf

#Set up different colors for dataflow
$ns color 1 Red
$ns color 2 Blue
$ns color 3 Green
$ns color 4 Yellow

#Define a 'finish' procedure 
proc finish {} {
global ns nf
$ns flush-trace
#close the trace file 
close $nf
#Execute nam on the trace file
exec nam ring.nam &
exit 0
}

#Create Nodes for the simulation
set n0 [$ns node]
set n1 [$ns node] 
set n2 [$ns node]
set n3 [$ns node]
set n4 [$ns node]
set n5 [$ns node]

#Create a duplex link between the links
$ns duplex-link $n0 $n1 2Mb 10ms DropTail
$ns duplex-link $n0 $n2 2Mb 10ms DropTail
$ns duplex-link $n1 $n3 1.7Mb 20ms DropTail
$ns duplex-link $n2 $n4 1.7Mb 20ms DropTail
$ns duplex-link $n3 $n5 1.6Mb 20ms DropTail
$ns duplex-link $n4 $n5 1.6Mb 20ms DropTail

#Set Queue Size of link (n4-n5) to 3
$ns queue-limit $n4 $n5 3

#Defining orientation of links
$ns duplex-link-op $n0 $n1 orient left-down
$ns duplex-link-op $n0 $n2 orient right-down
$ns duplex-link-op $n1 $n3 orient down
$ns duplex-link-op $n2 $n4 orient down
$ns duplex-link-op $n3 $n5 orient right-down
$ns duplex-link-op $n4 $n5 orient left-down

#Monitor the queue for link (n4-n5). (for NAM)
$ns duplex-link-op $n4 $n5 queuePos 0.5

#Setup a TCP1 connection
set tcp1 [new Agent/TCP]
$tcp1 set class_ 1
$ns attach-agent $n0 $tcp1 
set sink1 [new Agent/TCPSink]
$ns attach-agent $n5 $sink1
$ns connect $tcp1 $sink1
$tcp1 set fid_ 1

#Setup a TCP2 connection
set tcp2 [new Agent/TCP]
$tcp2 set class_ 2
$ns attach-agent $n2 $tcp2
set sink2 [new Agent/TCPSink]
$ns attach-agent $n3 $sink2
$ns connect $tcp2 $sink2
$tcp1 set fid_ 2 #ftp set up

#Setup a FTP1 over TCP1 connection
set ftp1 [new Application/FTP]
$ftp1 attach-agent $tcp1
$ftp1 set type_ FTP

#Setup a FTP2 over TCP2 connection
set ftp2 [new Application/FTP]
$ftp2 attach-agent $tcp2
$ftp2 set type_ FTP

#Setup a UDP1 connection
set udp1 [new Agent/UDP]
$ns attach-agent $n5 $udp1 
set null1 [new Agent/Null]
$ns attach-agent $n2 $null1
$ns connect $udp1 $null1 

#Setup a UDP2 connection
set udp2 [new Agent/UDP]
$ns attach-agent $n4 $udp2 
set null2 [new Agent/Null]
$ns attach-agent $n0 $null2
$ns connect $udp2 $null2

#Setup a CBR1 over UDP1 connection
set cbr1 [new Application/Traffic/CBR]
$cbr1 attach-agent $udp1
$cbr1 set type_ CBR
$cbr1 set packet_size_ 1000
$cbr1 set rate_ 2mb
$cbr1 set random_ false

#Setup a CBR2 over UDP2 connection
set cbr2 [new Application/Traffic/CBR]
$cbr2 attach-agent $udp2
$cbr2 set type_ CBR
$cbr2 set packet_size_ 1000
$cbr2 set rate_ 2mb
$cbr2 set random_ false

#Schedule events for the CBR and FTP agents
$ns at 0.1 "$ftp1 start"
$ns at 0.4 "$cbr1 start"
$ns at 0.6 "$ftp2 start"
$ns at 0.9 "$cbr2 start"
$ns at 1.3 "$ftp1 stop"
$ns at 1.6 "$cbr1 stop"
$ns at 1.9 "$ftp2 stop"
$ns at 2.2 "$cbr2 stop"

#Call the finish procedure after 5 seconds of simulation time
$ns at 2.5 "finish"

#Print CBR packet size and interval
puts "CBR packet size = [$cbr1 set packet_size_]" 
puts "CBR interval = [$cbr1 set interval_]"
puts "CBR packet size = [$cbr2 set packet_size_]"
puts "CBR interval = [$cbr2 set interval_]"

#Run the simulation
$ns run
